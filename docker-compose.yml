version: "3.9"

services:
  publisher:
    build: .
    command: python app/publisher.py
    volumes:
      - .:/app
    depends_on:
      redis:
        condition: service_started
      mysql:
        condition: service_healthy
    environment:
      - QUEUE_NAME=articles_queue
      - REDIS_HOST=redis
      - MYSQL_HOST=mysql
      - MYSQL_USER=root
      - MYSQL_PASSWORD=root
      - MYSQL_DB=consumer_articles

  consumer:
    build: .
    command: python app/consumer.py
    volumes:
      - .:/app
    depends_on:
      redis:
        condition: service_started
      mysql:
        condition: service_healthy
    environment:
      - QUEUE_NAME=articles_queue
      - REDIS_HOST=redis
      - MYSQL_HOST=mysql
      - MYSQL_USER=root
      - MYSQL_PASSWORD=root
      - MYSQL_DATABASE=consumer_articles

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  mysql:
    image: mysql:8
    environment:
      - MYSQL_DB=consumer_articles
      - MYSQL_ROOT_PASSWORD=root
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5

  phpmyadmin:
    image: phpmyadmin:latest
    ports:
      - "8080:80"
    environment:
      - PMA_ARBITRARY=1
    restart: unless-stopped

volumes:
  mysql_data: 
